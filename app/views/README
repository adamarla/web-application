## Dummy line added to test whether new hierarchy works


Listed below are class atributes used in HAML files here
and the meaning of those attributes : 

1. in-line-forms : For forms that are rendered within some other form. 
                   Applied to the <form> element that will be inlined

2. extractable : Marks the beginning of the sub-tree that can be extracted 
                 out from its parent and appended someplace else

3. new-entity : Marks any HTML node - usually <form> - that is used for 
                collecting input to create a new record in the DB

4. narrow : For elements that are to be rendered with width = 1/3 of parent 
5. pane : Marks elements that are rendered as independent and persistent 
          "control panels" on a page

6. appendable : The reverse of extractable. Marks the point in the DOM 
                below which HTML sub-trees can be added 

7. stub : The HTML sub-tree that is added within an appendable. Always
          a child of an 'appendable' and always the parent of whatever new 
          HTML is added. Must have an attribute called 'index'

8. cloneable : Similar to an 'extractable'. Only difference is that a 'cloneable' 
               must be, well, cloned before it can be pasted as a 'stub' within
               an appendable

9. close-on-submit : Applied on <form>s that must close themselves right after their
                     "Submit" button is clicked. Set on the parent <div> containing the <form> 
                     and accessed from within JS

10. flushable : Set on DOM element whose internals - children, grand-children etc - can 
                be deleted to be replaced - perhaps - with some other content. Represents 
                more "destructability" than 'extractable'

11. vertical, horizontal : Specify the alignment of the <div> on which set
12. action-panel : An area within which are housed <input>s, <button>s and the like for 
                   initiating some action ( a search, addition/deletion of records etc )

13. table, row, column : (self explanatory)
14. transparent : No background colour 

15. greedy : The element would - via JS - expand to take all remaining space in its 
             parent whilst maintaining the margins, paddings and borders. By default,
             element will expand horizontally. However, if .greedy is paired with .vertical,
             then the expansion will be vertical
                 
